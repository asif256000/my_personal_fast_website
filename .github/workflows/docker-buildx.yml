name: Build and Push Docker Image

on:
  push:
    branches:
      - main # Trigger the workflow on pushes to the main branch
  workflow_dispatch: # Allow manual triggering of the workflow

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_ACCESS_TOKEN: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      DOCKER_IMAGE_VERSION: ${{ vars.WEBSITE_DOCKER_IMAGE_VERSION }}
      DOCKER_REPO: fast_website

    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up environment variables
      - name: Set up environment variables
        run: |
          echo "DATABASE_URL=${{ secrets.DB_URL }}" >> .env

      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_ACCESS_TOKEN }}

      # Step 4: Update the minor version of the image version
      - name: Update minor version
        id: update_version
        run: |
          echo ${{ env.DOCKER_IMAGE_VERSION }}
          MINOR_VERSION=$(echo ${{ env.DOCKER_IMAGE_VERSION }} | awk -F. '{print $2}')
          NEW_MINOR_VERSION=$((MINOR_VERSION + 1))
          NEW_VERSION=$(echo ${{ env.DOCKER_IMAGE_VERSION }} | sed "s/\.[0-9]*$/.${NEW_MINOR_VERSION}/")
          echo $NEW_VERSION
          echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV

      # Step 5: Build and push the Docker image using buildx
      - name: Build and push Docker image
        run: |
          docker buildx build \
            --platform linux/amd64 \
            --push \
            -t ${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_REPO }}:${{ env.NEW_VERSION }} \
            -f src/Dockerfile .
        env:
          DOCKER_BUILDKIT: 1 # Enable BuildKit for efficient builds

      # Step 6: Update the version variable in GitHub Secrets and Variables
      - name: Set new version variable
        run: |
          echo "${{ secrets.PAT_TOKEN }}" | gh auth login --with-token
          gh variable set WEBSITE_DOCKER_IMAGE_VERSION --body "${{ env.NEW_VERSION }}"
