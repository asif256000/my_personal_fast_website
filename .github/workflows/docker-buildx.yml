name: Build and Push Docker Image

on:
  push:
    branches:
      - main # Trigger the workflow on pushes to the main branch
  workflow_dispatch: # Allow manual triggering of the workflow

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      # Step 3: Retrieve the current version
      - name: Get current version
        id: version
        run: |
          if [ -f VERSION ]; then
            echo "VERSION=$(cat VERSION)" >> $GITHUB_ENV
          else
            echo "VERSION=v1.0" >> $GITHUB_ENV
          fi
        shell: bash

      # Step 4: Increment the minor version
      - name: Increment minor version
        id: increment
        run: |
          version=${{ env.VERSION }}
          major=$(echo $version | cut -d. -f1)
          minor=$(echo $version | cut -d. -f2)
          minor=$((minor + 1))
          new_version="${major}.${minor}"
          echo "NEW_VERSION=$new_version" >> $GITHUB_ENV
        shell: bash

      # Step 5: Build and push the Docker image using buildx
      # - name: Build and push Docker image
      #   run: |
      #     docker buildx build \
      #       --platform linux/amd64 \
      #       --push \
      #       -t asifdocker23/fast_website:latest \
      #       -t asifdocker23/fast_website:${{ env.NEW_VERSION }} \
      #       -f src/Dockerfile .
      #   env:
      #     DOCKER_BUILDKIT: 1 # Enable BuildKit for efficient builds

      # Step 6: Update the version file and commit
      - name: Update VERSION file
        run: |
          echo "${{ env.NEW_VERSION }}" > VERSION
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add VERSION
          git commit -m "Update version to ${{ env.NEW_VERSION }}"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
